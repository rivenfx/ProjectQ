# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  batch: true
  branches:
    include:
    - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  migratorName: '0_migrator'
  hostName: '1_host'
  uiName: '2_ui'

steps:
- task: PowerShell@2
  name: "publish_web_migrator"
  displayName: '编译 Migrator'
  inputs:
    targetType: 'inline'
    script: |
      dotnet publish -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/$(migratorName)
    workingDirectory: './src/Company.Project.Migrator'


- task: PowerShell@2
  name: "publish_web_host"
  displayName: '编译 WebHost'
  inputs:
    targetType: 'inline'
    script: | 
      dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)/$(hostName)
    workingDirectory: './src/Company.Project.Host'

- task: PowerShell@2
  name: "admin_ui_remove_npmrc"
  displayName: '删除admin ui的npmrc'
  inputs:
    targetType: 'inline'
    script: | 
      Remove-Item -Force .npmrc
    workingDirectory: './ui/angular'

- task: Npm@1
  name: "admin_ui_npm_install"
  displayName: '还原admin ui的node_modules'
  inputs:
    command: 'custom'
    workingDir: './ui/angular'
    customCommand: ' install'

- task: Npm@1
  name: "admin_ui_npm_build"
  displayName: '编译admin ui'
  inputs:
    command: 'custom'
    workingDir: './ui/angular'
    customCommand: ' run build'

- task: PowerShell@2
  name: "admin_ui_move"
  displayName: '移动admin ui'
  inputs:
    targetType: 'inline'
    script: |
      Copy-Item -Force -Recurse  ./dist $(Build.ArtifactStagingDirectory)
      Set-Location $(Build.ArtifactStagingDirectory)
      ls
      Rename-Item ./dist $(uiName)
    workingDirectory: './ui/angular'

# - task: ArchiveFiles@2
#   name: "archive_files_build"
#   displayName: '打包编译结果'
#   inputs:
#     rootFolderOrFile: '$(Build.BinariesDirectory)'
#     includeRootFolder: true
#     archiveType: 'zip'
#     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#     replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  name: "build_save_artifacts"
  displayName: '保存编译结果'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'project_q_$(Build.BuildId).zip'